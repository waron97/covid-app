services:
  db:
    image: postgres:17
    container_name: covid-app-psql
    restart: unless-stopped
    env_file:
      - ../.env.production
    volumes:
      - ../../docker-volumes/postgres:/var/lib/postgresql/data:rw

  redis:
    image: redis/redis-stack:latest
    container_name: covid-app-redis
    restart: unless-stopped
    env_file:
      - ../.env.production

  adminer:
    image: adminer
    restart: unless-stopped
    ports:
      - 8080:8080

  api:
    build: ../../src/back-end
    container_name: covid-app-api
    env_file:
      - ../.env.production
    depends_on:
      - db
      - redis
    command: flask --app app --debug run --host=0.0.0.0
    # command: gunicorn -b 0.0.0.0:5555 --workers=2
    ports:
      - 5555:5555
    volumes:
      - ../../static:/usr/app/static:rw

  celery:
    build: ../../src/back-end
    container_name: covid-app-celery
    restart: always
    env_file:
      - ../.env.production
    depends_on:
      - db
      - redis
    command: celery -A app.celery_app worker --loglevel INFO
    volumes:
      - ../../static:/usr/app/static:rw

  data-import:
    build: ../../src/back-end
    container_name: covid-app-data-import
    restart: no
    env_file:
      - ../.env.production
    volumes:
      - ../../covid-data:/usr/app/covid-data:ro
    depends_on:
      - db
      - redis
    command: python startup.py

  client:
    build: ../../src/front-end
    container_name: covid-app-client
    restart: unless-stopped
    volumes:
      - ./certbot/www/:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/nginx/ssl/:ro
      - ../../static:/usr/share/nginx/html/static
    ports:
      - "80:80"
      - "443:443"

  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw
